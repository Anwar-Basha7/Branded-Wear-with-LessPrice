package com.example.Employee;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.*;

@Controller // This means that this class is a Controller
@RequestMapping(path="/demo") // This means URL's start with /demo (after Application path)
public class EmployeeController {
    @Autowired // This means to get the bean called userRepository
    // Which is auto-generated by Spring, we will use it to handle the data
    private EmployeeRepository userRepository;

    @PostMapping(path="/add") // Map ONLY POST Requests
    public @ResponseBody String addNewUser (@RequestParam String name
            , @RequestParam String email) {
        // @ResponseBody means the returned String is the response, not a view name
        // @RequestParam means it is a parameter from the GET or POST request

        Employee n = new Employee();
        n.setName(name);
        n.setEmail(email);
        userRepository.save(n);
        return "Saved";
    }

    @GetMapping(path="/all")
    public @ResponseBody Iterable<Employee> getAllUsers() {
        // This returns a JSON or XML with the users
        return userRepository.findAll();
    }

    //delete
    @DeleteMapping(path = "/delete/{id}")
    public @ResponseBody String deleteStd(@PathVariable Integer id){
        if(userRepository.existsById(id)){
            userRepository.deleteById(id);
            return "deleted";
        }
        else{
            return "error";
        }
    }

    //update

    @PutMapping(path = "/update/{id}")
    public @ResponseBody String UpdateStu(@PathVariable Integer id,
                                          @RequestParam(required = false) String name,
                                          @RequestParam(required = false) String email){
        Employee e=userRepository.findById(id).orElse(null);
        if(e!=null){
            if(name!=null){
                e.setName(name);
            }
            if(email!=null){
                e.setEmail(email);
            }
            userRepository.save(e);
            return "updated";
        }
        else{
            return "error";
        }

    }
}